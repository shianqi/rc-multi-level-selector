{"version":3,"file":"static/webpack/static/development/pages/advanced-usage/format-option.js.9c7212f89f845437c4df.hot-update.js","sources":["webpack:///./docs/src/components/AppWrapper.jsx"],"sourcesContent":["import React from 'react'\nimport styled, { createGlobalStyle } from 'styled-components'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\nimport Toolbar from '@material-ui/core/Toolbar'\n\nimport AppAction from 'REDUX/app/action'\nimport AppBar from './AppBar'\nimport Drawer from './AppDrawer'\n\nconst GlobalStyled = createGlobalStyle`\n  html {\n    height: 100%;\n    width: 100%;\n  }\n\n  body {\n    margin: 0;\n    height: 100%;\n    width: 100%;\n  }\n\n  #root {\n    display: flex;\n    flex: 1 1 0;\n  }\n\n  #__next {\n    height: 100%;\n  }\n`\n\nconst Root = styled.div`\n  flex-grow: 1;\n  z-index: 1;\n  overflow: hidden;\n  position: relative;\n  display: flex;\n  height: 100%;\n`\n\nconst Main = styled.main`\n  flex-grow: 1;\n  overflow-y: auto;\n  background-color: ${props => props.theme.palette.background.default};\n  padding: ${props => props.theme.spacing.unit * 3}px;\n\nbackground: #f00;\n  & > :first-child {\n    margin-top: 0 !important;\n  }\n`\n\nclass AppWrapper extends React.PureComponent {\n  state = {\n    mobileOpen: false\n  }\n\n  handleDrawerToggle = () => {\n    this.setState(state => ({ mobileOpen: !state.mobileOpen }))\n  }\n\n  render () {\n    const { mobileOpen } = this.state\n    const { children, actions, language, loading } = this.props\n\n    return (\n      <Root>\n        <GlobalStyled />\n        <AppBar\n          loading={loading}\n          language={language}\n          toggleLoadingState={actions.toggleLoadingState}\n          handleDrawerToggle={this.handleDrawerToggle}\n          handleChangeLanguage={actions.changeLanguage}\n        />\n        <Drawer\n          open={mobileOpen}\n          handleDrawerToggle={this.handleDrawerToggle}\n        />\n        <Main>\n          <Toolbar />\n          {children}\n        </Main>\n      </Root>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const { app, menu } = state\n  const { menuOpenState } = menu\n  const { language, loading } = app\n  return {\n    loading,\n    language,\n    menuOpenState\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  actions: bindActionCreators(AppAction, dispatch)\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AppWrapper)\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAsBA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AAOA;;;;;;;;;;;;;;;;;;AACA;AACA;AADA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAIA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AAFA;AAUA;;;;AAjCA;AACA;AAmCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAAA;AACA;AADA;AAAA;AACA;AAGA;;;;A","sourceRoot":""}