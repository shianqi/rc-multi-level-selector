{"version":3,"file":"static/webpack/static/development/pages/advanced-usage/format-option.js.e4b125ab27e8796e61b2.hot-update.js","sources":["webpack:///./docs/src/components/Document.jsx"],"sourcesContent":["import React, { Fragment } from 'react'\nimport styled, { createGlobalStyle } from 'styled-components'\nimport { connect } from 'react-redux'\n\nimport Typography from '@material-ui/core/Typography'\nimport novaCodeHighlighting from 'UTILS/novaCodeHighlighting'\nimport {\n  paletteGrey,\n  spacingUnit,\n  paletteSecondaryMain\n} from 'UTILS/theme'\n\nconst GlobaNova = createGlobalStyle`\n  ${novaCodeHighlighting};\n`\n\nconst DocumentStyle = createGlobalStyle`\n  hr {\n    margin: 0;\n    border: 0;\n    border-top: 1px solid ${paletteGrey[200]};\n    margin-bottom: 8px;\n  }\n`\n\nconst H1 = styled((props) => (\n  <Typography {...props} variant='h1' />\n))`\n  opacity: 1;\n  border-bottom: 1px solid #eaecef;\n  margin-bottom: 16px;\n  margin-top: 24px;\n  position: relative;\n\n  &:first-child {\n    margin-top: 0;\n  }\n`\n\nconst H2 = styled((props) => (\n  <Typography {...props} variant='h2' />\n))`\n  opacity: 1;\n  border-bottom: 1px solid #eaecef;\n  margin-bottom: 16px;\n  margin-top: 24px;\n  position: relative;\n`\n\nconst H3 = styled((props) => (\n  <Typography {...props} variant='h3' />\n))`\n  opacity: 1;\n  border-bottom: 1px solid #eaecef;\n  margin-bottom: 16px;\n  margin-top: 24px;\n  position: relative;\n`\n\nconst H4 = styled((props) => (\n  <Typography {...props} variant='h4' />\n))`\n  opacity: 1;\n  border-bottom: 1px solid #eaecef;\n  margin-bottom: 16px;\n  margin-top: 24px;\n  position: relative;\n`\n\nconst H5 = styled((props) => (\n  <Typography {...props} variant='h5' />\n))`\n  opacity: 1;\n  position: relative;\n`\n\nconst H6 = styled((props) => (\n  <Typography {...props} variant='h6' />\n))`\n  opacity: 1;\n  position: relative;\n`\n\nconst A = styled.a`\n  background-color: rgba(187, 239, 253, 0.3);\n  text-decoration: none;\n  color: rgba(0, 0, 0, 0.87);\n  border-bottom: 1px solid rgba(0, 0, 0, 0.38);\n\n  &:hover {\n    border-bottom: 1px solid rgba(0, 0, 0, 0.87);\n  }\n`\n\nconst P = styled((props) => (\n  <Typography {...props} variant='body1' />\n))`\n  opacity: 1;\n`\n\nconst UL = styled.ul`\n  opacity: 1;\n`\n\nconst LI = styled.li`\n  opacity: 1;\n`\n\nconst Table = styled.table`\n  display: block;\n  overflow: auto;\n  width: 100%;\n  line-height: 1.5;\n  border-collapse: collapse;\n  border-spacing: 0;\n  background: #fff;\n`\n\nconst TR = styled.tr`\n  border-top: 1px solid #c6cbd1;\n\n  &:nth-child(2n) {\n    background-color: #f6f8fa;\n  }\n`\n\nconst TD = styled.td`\n  border: 1px solid #dfe2e5;\n  min-width: 200px;\n  padding: 6px 13px;\n`\n\nconst TH = styled.th`\n  border: 1px solid #dfe2e5;\n  padding: 6px 13px;\n`\n\nconst InlineCode = styled.code`\n  padding: 2px 4px;\n  background-color: #f2f2f2;\n  border: none;\n  font-size: 16px;\n  white-space: pre-wrap;\n  color: #c7254e;\n  border-radius: 4px;\n`\n\nconst Code = styled.code`\n  overflow-x: auto;\n  background: #282c34;\n  color: #abb2bf;\n`\n\nconst Pre = styled.pre`\n  overflow-x: auto;\n  padding: 12px 18px;\n  background: #282c34;\n  color: #abb2bf;\n  border-radius: 4px;\n`\n\nconst Blockquote = styled.blockquote`\n  margin: 16px 0;\n  border-left: ${spacingUnit}px solid ${paletteSecondaryMain};\n  background: ${paletteGrey[200]};\n  padding: 16px 24px;\n`\n\nconst getDocs = (name, lang) => require(`../pages/${name}${lang}.mdx`).default\n\nclass Document extends React.PureComponent {\n  render () {\n    const { language } = this.props\n    const long = language === 'en' ? '' : `-${language}`\n    const { name = 'installation' } = this.props\n    const Component = getDocs(name, long)\n\n    return (\n      <Fragment>\n        <GlobaNova />\n        <DocumentStyle />\n        <Component\n          components={{\n            h1: H1,\n            h2: H2,\n            h3: H3,\n            h4: H4,\n            h5: H5,\n            h6: H6,\n            ul: UL,\n            li: LI,\n            p: P,\n            a: A,\n            table: Table,\n            tr: TR,\n            th: TH,\n            td: TD,\n            pre: Pre,\n            code: Code,\n            blockquote: Blockquote,\n            inlineCode: InlineCode\n          }}\n        />\n      </Fragment>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const { app } = state\n  const { language } = app\n  return {\n    language\n  }\n}\n\nexport default connect(mapStateToProps)(Document)\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AAMA;AAIA;AASA;AAAA;AACA;AAAA;AADA;AAAA;AAAA;AAAA;AAcA;AAAA;AACA;AAAA;AADA;AAAA;AAAA;AAAA;AAUA;AAAA;AACA;AAAA;AADA;AAAA;AAAA;AAAA;AAUA;AAAA;AACA;AAAA;AADA;AAAA;AAAA;AAAA;AAUA;AAAA;AACA;AAAA;AADA;AAAA;AAAA;AAAA;AAOA;AAAA;AACA;AAAA;AADA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAWA;AAAA;AACA;AAAA;AADA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AACA;AAMA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;AACA;AAAA;AAEA;AAFA;AAAA;AAIA;AAEA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlBA;AADA;AAwBA;;;;AAnCA;AACA;AAqCA;AAAA;AAAA;AAGA;AACA;AADA;AAGA;AACA;AACA;;;;A","sourceRoot":""}